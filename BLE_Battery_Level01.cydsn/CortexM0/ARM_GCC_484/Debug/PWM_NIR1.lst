ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_NIR1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_NIR1_initVar
  18              		.bss
  19              		.type	PWM_NIR1_initVar, %object
  20              		.size	PWM_NIR1_initVar, 1
  21              	PWM_NIR1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_NIR1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_NIR1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_NIR1_Start, %function
  29              	PWM_NIR1_Start:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_NIR1.c"
   1:.\Generated_Source\PSoC4/PWM_NIR1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_NIR1.c **** * File Name: PWM_NIR1.c
   3:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
   5:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  15:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  17:.\Generated_Source\PSoC4/PWM_NIR1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_NIR1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_NIR1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_NIR1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_NIR1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  24:.\Generated_Source\PSoC4/PWM_NIR1.c **** #include "PWM_NIR1.h"
  25:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  26:.\Generated_Source\PSoC4/PWM_NIR1.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_NIR1.c **** #ifdef PWM_NIR1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #error PWM_v3_10 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_NIR1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* PWM_NIR1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  32:.\Generated_Source\PSoC4/PWM_NIR1.c **** uint8 PWM_NIR1_initVar = 0u;
  33:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  34:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  35:.\Generated_Source\PSoC4/PWM_NIR1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Function Name: PWM_NIR1_Start
  37:.\Generated_Source\PSoC4/PWM_NIR1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  39:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  44:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  47:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  50:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  PWM_NIR1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_NIR1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  54:.\Generated_Source\PSoC4/PWM_NIR1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_NIR1.c **** void PWM_NIR1_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_NIR1.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_NIR1.c ****     if(PWM_NIR1_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
  60:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	PWM_NIR1_Init
  61:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
  63:.\Generated_Source\PSoC4/PWM_NIR1.c ****     PWM_NIR1_Enable();
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	PWM_NIR1_Enable
  64:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  65:.\Generated_Source\PSoC4/PWM_NIR1.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	PWM_NIR1_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	PWM_NIR1_Start, .-PWM_NIR1_Start
  65              		.section	.text.PWM_NIR1_Init,"ax",%progbits
  66              		.align	2
  67              		.global	PWM_NIR1_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	PWM_NIR1_Init, %function
  71              	PWM_NIR1_Init:
  72              	.LFB3:
  66:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  67:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  68:.\Generated_Source\PSoC4/PWM_NIR1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Function Name: PWM_NIR1_Init
  70:.\Generated_Source\PSoC4/PWM_NIR1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  72:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  PWM_NIR1_Start().
  76:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  77:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  80:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
  83:.\Generated_Source\PSoC4/PWM_NIR1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_NIR1.c **** void PWM_NIR1_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_NIR1.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 82B0     		sub	sp, sp, #8
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UsingFixedFunction || PWM_NIR1_UseControl)
  87:.\Generated_Source\PSoC4/PWM_NIR1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UsingFixedFunction || PWM_NIR1_UseControl) */
  89:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 4


  90:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if(!PWM_NIR1_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(PWM_NIR1_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_NIR1.c ****             uint8 PWM_NIR1_interruptState;
  94:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (!PWM_NIR1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
  97:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_CONTROL |= PWM_NIR1_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if (PWM_NIR1_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_CONTROL |= PWM_NIR1_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 104:.\Generated_Source\PSoC4/PWM_NIR1.c ****         ctrl = PWM_NIR1_CONTROL3 & ((uint8 )(~PWM_NIR1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_CONTROL3 = ctrl | PWM_NIR1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 107:.\Generated_Source\PSoC4/PWM_NIR1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_RT1 &= ((uint8)(~PWM_NIR1_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_RT1 |= PWM_NIR1_SYNC;
 110:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 111:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_RT1 &= ((uint8)(~PWM_NIR1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_RT1 |= PWM_NIR1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 115:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #elif (PWM_NIR1_UseControl)
 116:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_NIR1.c ****         ctrl = PWM_NIR1_CONTROL & ((uint8)(~PWM_NIR1_CTRL_CMPMODE2_MASK)) &
  83              		.loc 1 117 0
  84 0006 124B     		ldr	r3, .L6
  85 0008 1B78     		ldrb	r3, [r3]
  86 000a DAB2     		uxtb	r2, r3
  87 000c FB1D     		add	r3, r7, #7
  88 000e 3F21     		mov	r1, #63
  89 0010 8A43     		bic	r2, r1
  90 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 ((uint8)(~PWM_NIR1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_CONTROL = ctrl | PWM_NIR1_DEFAULT_COMPARE2_MODE |
  91              		.loc 1 119 0
  92 0014 0E4B     		ldr	r3, .L6
  93 0016 FA1D     		add	r2, r7, #7
  94 0018 1278     		ldrb	r2, [r2]
  95 001a 0921     		mov	r1, #9
  96 001c 0A43     		orr	r2, r1
  97 001e D2B2     		uxtb	r2, r2
  98 0020 1A70     		strb	r2, [r3]
 120:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                    PWM_NIR1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 123:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (!PWM_NIR1_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if (PWM_NIR1_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_AUX_CONTROLDP0 |= (PWM_NIR1_AUX_CTRL_FIFO0_CLR);
  99              		.loc 1 126 0
 100 0022 0C4B     		ldr	r3, .L6+4
 101 0024 0B4A     		ldr	r2, .L6+4
 102 0026 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 5


 103 0028 D2B2     		uxtb	r2, r2
 104 002a 0121     		mov	r1, #1
 105 002c 0A43     		orr	r2, r1
 106 002e D2B2     		uxtb	r2, r2
 107 0030 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else /* (PWM_NIR1_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_AUX_CONTROLDP0 |= (PWM_NIR1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_AUX_CONTROLDP1 |= (PWM_NIR1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 133:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_WriteCounter(PWM_NIR1_INIT_PERIOD_VALUE);
 108              		.loc 1 133 0
 109 0032 FF20     		mov	r0, #255
 110 0034 FFF7FEFF 		bl	PWM_NIR1_WriteCounter
 134:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (!PWM_NIR1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 136:.\Generated_Source\PSoC4/PWM_NIR1.c ****     PWM_NIR1_WritePeriod(PWM_NIR1_INIT_PERIOD_VALUE);
 111              		.loc 1 136 0
 112 0038 FF20     		mov	r0, #255
 113 003a FFF7FEFF 		bl	PWM_NIR1_WritePeriod
 137:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 138:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if (PWM_NIR1_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_WriteCompare(PWM_NIR1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_WriteCompare1(PWM_NIR1_INIT_COMPARE_VALUE1);
 114              		.loc 1 141 0
 115 003e 7F20     		mov	r0, #127
 116 0040 FFF7FEFF 		bl	PWM_NIR1_WriteCompare1
 142:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_WriteCompare2(PWM_NIR1_INIT_COMPARE_VALUE2);
 117              		.loc 1 142 0
 118 0044 3F20     		mov	r0, #63
 119 0046 FFF7FEFF 		bl	PWM_NIR1_WriteCompare2
 143:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 145:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if (PWM_NIR1_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_WriteKillTime(PWM_NIR1_MinimumKillTime);
 147:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 149:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if (PWM_NIR1_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_WriteDeadTime(PWM_NIR1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 153:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UseStatus || PWM_NIR1_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_SetInterruptMode(PWM_NIR1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UseStatus || PWM_NIR1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 157:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_GLOBAL_ENABLE |= PWM_NIR1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_CONTROL2 |= PWM_NIR1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(PWM_NIR1_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 165:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Enter Critical Region*/
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 6


 167:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_STATUS_AUX_CTRL |= PWM_NIR1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 171:.\Generated_Source\PSoC4/PWM_NIR1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_NIR1.c ****             CyExitCriticalSection(PWM_NIR1_interruptState);
 173:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 174:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Clear the FIFO to enable the PWM_NIR1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_NIR1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_NIR1.c **** }
 120              		.loc 1 179 0
 121 004a BD46     		mov	sp, r7
 122 004c 02B0     		add	sp, sp, #8
 123              		@ sp needed
 124 004e 80BD     		pop	{r7, pc}
 125              	.L7:
 126              		.align	2
 127              	.L6:
 128 0050 70000F40 		.word	1074724976
 129 0054 90000F40 		.word	1074725008
 130              		.cfi_endproc
 131              	.LFE3:
 132              		.size	PWM_NIR1_Init, .-PWM_NIR1_Init
 133              		.section	.text.PWM_NIR1_Enable,"ax",%progbits
 134              		.align	2
 135              		.global	PWM_NIR1_Enable
 136              		.code	16
 137              		.thumb_func
 138              		.type	PWM_NIR1_Enable, %function
 139              	PWM_NIR1_Enable:
 140              	.LFB4:
 180:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 181:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 182:.\Generated_Source\PSoC4/PWM_NIR1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Function Name: PWM_NIR1_Enable
 184:.\Generated_Source\PSoC4/PWM_NIR1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 186:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 189:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 192:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 195:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 198:.\Generated_Source\PSoC4/PWM_NIR1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_NIR1.c **** void PWM_NIR1_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_NIR1.c **** {
 141              		.loc 1 200 0
 142              		.cfi_startproc
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 7


 143 0000 80B5     		push	{r7, lr}
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_GLOBAL_ENABLE |= PWM_NIR1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_GLOBAL_STBY_ENABLE |= PWM_NIR1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 207:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UseControl || PWM_NIR1_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_CONTROL |= PWM_NIR1_CTRL_ENABLE;
 149              		.loc 1 209 0
 150 0004 054B     		ldr	r3, .L9
 151 0006 054A     		ldr	r2, .L9
 152 0008 1278     		ldrb	r2, [r2]
 153 000a D2B2     		uxtb	r2, r2
 154 000c 8021     		mov	r1, #128
 155 000e 4942     		neg	r1, r1
 156 0010 0A43     		orr	r2, r1
 157 0012 D2B2     		uxtb	r2, r2
 158 0014 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UseControl || PWM_NIR1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_NIR1.c **** }
 159              		.loc 1 211 0
 160 0016 BD46     		mov	sp, r7
 161              		@ sp needed
 162 0018 80BD     		pop	{r7, pc}
 163              	.L10:
 164 001a C046     		.align	2
 165              	.L9:
 166 001c 70000F40 		.word	1074724976
 167              		.cfi_endproc
 168              	.LFE4:
 169              		.size	PWM_NIR1_Enable, .-PWM_NIR1_Enable
 170              		.section	.text.PWM_NIR1_Stop,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_NIR1_Stop
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_NIR1_Stop, %function
 176              	PWM_NIR1_Stop:
 177              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 213:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 214:.\Generated_Source\PSoC4/PWM_NIR1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Function Name: PWM_NIR1_Stop
 216:.\Generated_Source\PSoC4/PWM_NIR1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 218:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 222:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Parameters:
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 8


 223:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 225:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 228:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 232:.\Generated_Source\PSoC4/PWM_NIR1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_NIR1.c **** void PWM_NIR1_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_NIR1.c **** {
 178              		.loc 1 234 0
 179              		.cfi_startproc
 180 0000 80B5     		push	{r7, lr}
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 7, -8
 183              		.cfi_offset 14, -4
 184 0002 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UseControl || PWM_NIR1_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_CONTROL &= ((uint8)(~PWM_NIR1_CTRL_ENABLE));
 186              		.loc 1 236 0
 187 0004 044B     		ldr	r3, .L12
 188 0006 044A     		ldr	r2, .L12
 189 0008 1278     		ldrb	r2, [r2]
 190 000a D1B2     		uxtb	r1, r2
 191 000c 7F22     		mov	r2, #127
 192 000e 0A40     		and	r2, r1
 193 0010 D2B2     		uxtb	r2, r2
 194 0012 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UseControl || PWM_NIR1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 239:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_GLOBAL_ENABLE &= ((uint8)(~PWM_NIR1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_NIR1.c ****         PWM_NIR1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_NIR1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_NIR1.c **** }
 195              		.loc 1 244 0
 196 0014 BD46     		mov	sp, r7
 197              		@ sp needed
 198 0016 80BD     		pop	{r7, pc}
 199              	.L13:
 200              		.align	2
 201              	.L12:
 202 0018 70000F40 		.word	1074724976
 203              		.cfi_endproc
 204              	.LFE5:
 205              		.size	PWM_NIR1_Stop, .-PWM_NIR1_Stop
 206              		.section	.text.PWM_NIR1_WriteCounter,"ax",%progbits
 207              		.align	2
 208              		.global	PWM_NIR1_WriteCounter
 209              		.code	16
 210              		.thumb_func
 211              		.type	PWM_NIR1_WriteCounter, %function
 212              	PWM_NIR1_WriteCounter:
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 9


 213              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 246:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (PWM_NIR1_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 249:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 250:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Function Name: PWM_NIR1_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_NIR1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 254:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 258:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 262:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 265:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/PWM_NIR1.c ****         void PWM_NIR1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_NIR1.c ****         {
 268:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #if(PWM_NIR1_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 270:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #if(0 != PWM_NIR1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_NIR1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_NIR1_CTRL_CMPMODE1
 272:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_NIR1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #endif /* (0 != PWM_NIR1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 276:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 PWM_NIR1_CONTROL3 &= ((uint8)(~PWM_NIR1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data
 277:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 PWM_NIR1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 279:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #elif (PWM_NIR1_UseControl)
 280:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 281:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #if(0 != PWM_NIR1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_NIR1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_NIR1_CTRL_CMPMODE
 283:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                                 PWM_NIR1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_NIR1.c ****                     uint8 comparemode1masked = comparemode & PWM_NIR1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #endif /* (0 != PWM_NIR1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 288:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #if(0 != PWM_NIR1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_NIR1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_NIR1_CTRL_CMPMODE
 290:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                                PWM_NIR1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_NIR1.c ****                     uint8 comparemode2masked = comparemode & PWM_NIR1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 #endif /* (0 != PWM_NIR1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 295:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 PWM_NIR1_CONTROL &= ((uint8)(~(PWM_NIR1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                             PWM_NIR1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 PWM_NIR1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 300:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #else
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 10


 301:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #endif /* (PWM_NIR1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_NIR1.c ****         }
 304:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* PWM_NIR1_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 306:.\Generated_Source\PSoC4/PWM_NIR1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 308:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 310:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 311:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Function Name: PWM_NIR1_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_NIR1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 315:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 318:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 322:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Return:
 323:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 325:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_NIR1.c ****         void PWM_NIR1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_NIR1.c ****         {
 328:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #if(0 != PWM_NIR1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_NIR1_CTRL_CMPMODE1_SHI
 330:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                            PWM_NIR1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 uint8 comparemodemasked = comparemode & PWM_NIR1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #endif /* (0 != PWM_NIR1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 335:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #if (PWM_NIR1_UseControl)
 336:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 PWM_NIR1_CONTROL &= ((uint8)(~PWM_NIR1_CTRL_CMPMODE1_MASK)); /*Clear existing mode 
 337:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 PWM_NIR1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #endif /* (PWM_NIR1_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_NIR1.c ****         }
 340:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* PWM_NIR1_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 342:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (PWM_NIR1_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 344:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 345:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 349:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 352:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 356:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 11


 358:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 359:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_NIR1.c ****     void PWM_NIR1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 362:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 363:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(0 != PWM_NIR1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_NIR1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_NIR1_CTRL_CMPMODE2_SHIFT))
 365:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                                  PWM_NIR1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_NIR1.c ****             uint8 comparemodemasked = comparemode & PWM_NIR1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (0 != PWM_NIR1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 370:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if (PWM_NIR1_UseControl)
 371:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_CONTROL &= ((uint8)(~PWM_NIR1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 375:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /*PWM_NIR1_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 377:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 379:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 380:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (!PWM_NIR1_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 382:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 383:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 387:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 393:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 396:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 399:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 402:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_NIR1.c ****     void PWM_NIR1_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 214              		.loc 1 405 0
 215              		.cfi_startproc
 216 0000 80B5     		push	{r7, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 82B0     		sub	sp, sp, #8
 221              		.cfi_def_cfa_offset 16
 222 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 12


 223              		.cfi_def_cfa_register 7
 224 0006 021C     		mov	r2, r0
 225 0008 FB1D     		add	r3, r7, #7
 226 000a 1A70     		strb	r2, [r3]
 406:.\Generated_Source\PSoC4/PWM_NIR1.c ****         CY_SET_REG8(PWM_NIR1_COUNTER_LSB_PTR, counter);
 227              		.loc 1 406 0
 228 000c 034B     		ldr	r3, .L15
 229 000e FA1D     		add	r2, r7, #7
 230 0010 1278     		ldrb	r2, [r2]
 231 0012 1A70     		strb	r2, [r3]
 407:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 232              		.loc 1 407 0
 233 0014 BD46     		mov	sp, r7
 234 0016 02B0     		add	sp, sp, #8
 235              		@ sp needed
 236 0018 80BD     		pop	{r7, pc}
 237              	.L16:
 238 001a C046     		.align	2
 239              	.L15:
 240 001c 00000F40 		.word	1074724864
 241              		.cfi_endproc
 242              	.LFE6:
 243              		.size	PWM_NIR1_WriteCounter, .-PWM_NIR1_WriteCounter
 244              		.section	.text.PWM_NIR1_ReadCounter,"ax",%progbits
 245              		.align	2
 246              		.global	PWM_NIR1_ReadCounter
 247              		.code	16
 248              		.thumb_func
 249              		.type	PWM_NIR1_ReadCounter, %function
 250              	PWM_NIR1_ReadCounter:
 251              	.LFB7:
 408:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 409:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 410:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 414:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 418:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 421:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 424:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_NIR1.c ****     uint8 PWM_NIR1_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 252              		.loc 1 426 0
 253              		.cfi_startproc
 254 0000 80B5     		push	{r7, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 13


 259              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_NIR1.c ****           (void)CY_GET_REG8(PWM_NIR1_COUNTERCAP_LSB_PTR_8BIT);
 260              		.loc 1 430 0
 261 0004 034B     		ldr	r3, .L19
 262 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 432:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_NIR1.c ****         return (CY_GET_REG8(PWM_NIR1_CAPTURE_LSB_PTR));
 263              		.loc 1 433 0
 264 0008 034B     		ldr	r3, .L19+4
 265 000a 1B78     		ldrb	r3, [r3]
 266 000c DBB2     		uxtb	r3, r3
 434:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 267              		.loc 1 434 0
 268 000e 181C     		mov	r0, r3
 269 0010 BD46     		mov	sp, r7
 270              		@ sp needed
 271 0012 80BD     		pop	{r7, pc}
 272              	.L20:
 273              		.align	2
 274              	.L19:
 275 0014 10000F40 		.word	1074724880
 276 0018 50000F40 		.word	1074724944
 277              		.cfi_endproc
 278              	.LFE7:
 279              		.size	PWM_NIR1_ReadCounter, .-PWM_NIR1_ReadCounter
 280              		.section	.text.PWM_NIR1_WritePeriod,"ax",%progbits
 281              		.align	2
 282              		.global	PWM_NIR1_WritePeriod
 283              		.code	16
 284              		.thumb_func
 285              		.type	PWM_NIR1_WritePeriod, %function
 286              	PWM_NIR1_WritePeriod:
 287              	.LFB8:
 435:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 436:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if (PWM_NIR1_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 438:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 439:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Function Name: PWM_NIR1_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_NIR1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 443:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 446:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 449:.\Generated_Source\PSoC4/PWM_NIR1.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *
 452:.\Generated_Source\PSoC4/PWM_NIR1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_NIR1.c ****         void PWM_NIR1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_NIR1.c ****         {
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 14


 455:.\Generated_Source\PSoC4/PWM_NIR1.c ****             while(0u != (PWM_NIR1_ReadStatusRegister() & PWM_NIR1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM_NIR1.c ****             {
 457:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 (void)PWM_NIR1_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM_NIR1.c ****             }
 459:.\Generated_Source\PSoC4/PWM_NIR1.c ****         }
 460:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 461:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* PWM_NIR1_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 463:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* !PWM_NIR1_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 465:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 466:.\Generated_Source\PSoC4/PWM_NIR1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Function Name: PWM_NIR1_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_NIR1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 470:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 474:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_NIR1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 478:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 481:.\Generated_Source\PSoC4/PWM_NIR1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_NIR1.c **** void PWM_NIR1_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC4/PWM_NIR1.c **** {
 288              		.loc 1 483 0
 289              		.cfi_startproc
 290 0000 80B5     		push	{r7, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 82B0     		sub	sp, sp, #8
 295              		.cfi_def_cfa_offset 16
 296 0004 00AF     		add	r7, sp, #0
 297              		.cfi_def_cfa_register 7
 298 0006 021C     		mov	r2, r0
 299 0008 FB1D     		add	r3, r7, #7
 300 000a 1A70     		strb	r2, [r3]
 484:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if(PWM_NIR1_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_NIR1.c ****         CY_SET_REG16(PWM_NIR1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_NIR1.c ****         CY_SET_REG8(PWM_NIR1_PERIOD_LSB_PTR, period);
 301              		.loc 1 487 0
 302 000c 034B     		ldr	r3, .L22
 303 000e FA1D     		add	r2, r7, #7
 304 0010 1278     		ldrb	r2, [r2]
 305 0012 1A70     		strb	r2, [r3]
 488:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_NIR1.c **** }
 306              		.loc 1 489 0
 307 0014 BD46     		mov	sp, r7
 308 0016 02B0     		add	sp, sp, #8
 309              		@ sp needed
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 15


 310 0018 80BD     		pop	{r7, pc}
 311              	.L23:
 312 001a C046     		.align	2
 313              	.L22:
 314 001c 40000F40 		.word	1074724928
 315              		.cfi_endproc
 316              	.LFE8:
 317              		.size	PWM_NIR1_WritePeriod, .-PWM_NIR1_WritePeriod
 318              		.section	.text.PWM_NIR1_WriteCompare1,"ax",%progbits
 319              		.align	2
 320              		.global	PWM_NIR1_WriteCompare1
 321              		.code	16
 322              		.thumb_func
 323              		.type	PWM_NIR1_WriteCompare1, %function
 324              	PWM_NIR1_WriteCompare1:
 325              	.LFB9:
 490:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 491:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (PWM_NIR1_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 493:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 494:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 498:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 505:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 508:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 511:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 515:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_NIR1.c ****     void PWM_NIR1_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 519:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(PWM_NIR1_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_NIR1.c ****             CY_SET_REG16(PWM_NIR1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_NIR1.c ****             CY_SET_REG8(PWM_NIR1_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 525:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if (PWM_NIR1_PWMMode == PWM_NIR1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #if(PWM_NIR1_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 CY_SET_REG16(PWM_NIR1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 CY_SET_REG8(PWM_NIR1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #endif /* (PWM_NIR1_UsingFixedFunction) */
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 16


 531:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_PWMMode == PWM_NIR1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 533:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 534:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 535:.\Generated_Source\PSoC4/PWM_NIR1.c **** #else
 536:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 537:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 538:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 542:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 548:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 551:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 554:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_NIR1.c ****     void PWM_NIR1_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 326              		.loc 1 557 0
 327              		.cfi_startproc
 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 82B0     		sub	sp, sp, #8
 333              		.cfi_def_cfa_offset 16
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 336 0006 021C     		mov	r2, r0
 337 0008 FB1D     		add	r3, r7, #7
 338 000a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(PWM_NIR1_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_NIR1.c ****             CY_SET_REG16(PWM_NIR1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_NIR1.c ****             CY_SET_REG8(PWM_NIR1_COMPARE1_LSB_PTR, compare);
 339              		.loc 1 561 0
 340 000c 034B     		ldr	r3, .L25
 341 000e FA1D     		add	r2, r7, #7
 342 0010 1278     		ldrb	r2, [r2]
 343 0012 1A70     		strb	r2, [r3]
 562:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 344              		.loc 1 563 0
 345 0014 BD46     		mov	sp, r7
 346 0016 02B0     		add	sp, sp, #8
 347              		@ sp needed
 348 0018 80BD     		pop	{r7, pc}
 349              	.L26:
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 17


 350 001a C046     		.align	2
 351              	.L25:
 352 001c 20000F40 		.word	1074724896
 353              		.cfi_endproc
 354              	.LFE9:
 355              		.size	PWM_NIR1_WriteCompare1, .-PWM_NIR1_WriteCompare1
 356              		.section	.text.PWM_NIR1_WriteCompare2,"ax",%progbits
 357              		.align	2
 358              		.global	PWM_NIR1_WriteCompare2
 359              		.code	16
 360              		.thumb_func
 361              		.type	PWM_NIR1_WriteCompare2, %function
 362              	PWM_NIR1_WriteCompare2:
 363              	.LFB10:
 564:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 565:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 566:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 570:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 577:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 580:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 583:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_NIR1.c ****     void PWM_NIR1_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 364              		.loc 1 586 0
 365              		.cfi_startproc
 366 0000 80B5     		push	{r7, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 82B0     		sub	sp, sp, #8
 371              		.cfi_def_cfa_offset 16
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 021C     		mov	r2, r0
 375 0008 FB1D     		add	r3, r7, #7
 376 000a 1A70     		strb	r2, [r3]
 587:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(PWM_NIR1_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_NIR1.c ****             CY_SET_REG16(PWM_NIR1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_NIR1.c ****             CY_SET_REG8(PWM_NIR1_COMPARE2_LSB_PTR, compare);
 377              		.loc 1 590 0
 378 000c 034B     		ldr	r3, .L28
 379 000e FA1D     		add	r2, r7, #7
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 18


 380 0010 1278     		ldrb	r2, [r2]
 381 0012 1A70     		strb	r2, [r3]
 591:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 382              		.loc 1 592 0
 383 0014 BD46     		mov	sp, r7
 384 0016 02B0     		add	sp, sp, #8
 385              		@ sp needed
 386 0018 80BD     		pop	{r7, pc}
 387              	.L29:
 388 001a C046     		.align	2
 389              	.L28:
 390 001c 30000F40 		.word	1074724912
 391              		.cfi_endproc
 392              	.LFE10:
 393              		.size	PWM_NIR1_WriteCompare2, .-PWM_NIR1_WriteCompare2
 394              		.section	.text.PWM_NIR1_ReadControlRegister,"ax",%progbits
 395              		.align	2
 396              		.global	PWM_NIR1_ReadControlRegister
 397              		.code	16
 398              		.thumb_func
 399              		.type	PWM_NIR1_ReadControlRegister, %function
 400              	PWM_NIR1_ReadControlRegister:
 401              	.LFB11:
 593:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 595:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (PWM_NIR1_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 597:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 598:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 602:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 605:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 608:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 611:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_NIR1.c ****     void PWM_NIR1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 614:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(!PWM_NIR1_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_NIR1.c ****             CY_SET_REG8(PWM_NIR1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_NIR1.c ****             PWM_NIR1_DEADBAND_COUNT &= ((uint8)(~PWM_NIR1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 622:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #if(PWM_NIR1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 PWM_NIR1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_NIR1_DEADBAND_COUNT_SHIF
 625:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                                     PWM_NIR1_DEADBAND_COUNT_MASK;
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 19


 626:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 PWM_NIR1_DEADBAND_COUNT |= deadtime & PWM_NIR1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #endif /* (PWM_NIR1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 630:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (!PWM_NIR1_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 632:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 633:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 634:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 638:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 641:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 644:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 647:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_NIR1.c ****     uint8 PWM_NIR1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 650:.\Generated_Source\PSoC4/PWM_NIR1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(!PWM_NIR1_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_NIR1.c ****             return (CY_GET_REG8(PWM_NIR1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 655:.\Generated_Source\PSoC4/PWM_NIR1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #if(PWM_NIR1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 return ((uint8)(((uint8)(PWM_NIR1_DEADBAND_COUNT & PWM_NIR1_DEADBAND_COUNT_MASK)) >
 658:.\Generated_Source\PSoC4/PWM_NIR1.c ****                                                                            PWM_NIR1_DEADBAND_COUNT_
 659:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_NIR1.c ****                 return (PWM_NIR1_DEADBAND_COUNT & PWM_NIR1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_NIR1.c ****             #endif /* (PWM_NIR1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (!PWM_NIR1_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 664:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 666:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (PWM_NIR1_UseStatus || PWM_NIR1_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 668:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 669:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 673:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 677:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 680:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 20


 683:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_NIR1.c ****     void PWM_NIR1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 686:.\Generated_Source\PSoC4/PWM_NIR1.c ****         CY_SET_REG8(PWM_NIR1_STATUS_MASK_PTR, interruptMode);
 687:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 688:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 689:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 690:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 694:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 697:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 700:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 710:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_NIR1.c ****     uint8 PWM_NIR1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 713:.\Generated_Source\PSoC4/PWM_NIR1.c ****         return (CY_GET_REG8(PWM_NIR1_STATUS_PTR));
 714:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 715:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 716:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* (PWM_NIR1_UseStatus || PWM_NIR1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 718:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 719:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (PWM_NIR1_UseControl)
 720:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 721:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 722:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 726:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 730:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 733:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 736:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_NIR1.c ****     uint8 PWM_NIR1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 402              		.loc 1 738 0
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 21


 403              		.cfi_startproc
 404 0000 80B5     		push	{r7, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0002 82B0     		sub	sp, sp, #8
 409              		.cfi_def_cfa_offset 16
 410 0004 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC4/PWM_NIR1.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 741:.\Generated_Source\PSoC4/PWM_NIR1.c ****         result = CY_GET_REG8(PWM_NIR1_CONTROL_PTR);
 412              		.loc 1 741 0
 413 0006 054A     		ldr	r2, .L32
 414 0008 FB1D     		add	r3, r7, #7
 415 000a 1278     		ldrb	r2, [r2]
 416 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/PWM_NIR1.c ****         return (result);
 417              		.loc 1 742 0
 418 000e FB1D     		add	r3, r7, #7
 419 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 420              		.loc 1 743 0
 421 0012 181C     		mov	r0, r3
 422 0014 BD46     		mov	sp, r7
 423 0016 02B0     		add	sp, sp, #8
 424              		@ sp needed
 425 0018 80BD     		pop	{r7, pc}
 426              	.L33:
 427 001a C046     		.align	2
 428              	.L32:
 429 001c 70000F40 		.word	1074724976
 430              		.cfi_endproc
 431              	.LFE11:
 432              		.size	PWM_NIR1_ReadControlRegister, .-PWM_NIR1_ReadControlRegister
 433              		.section	.text.PWM_NIR1_WriteControlRegister,"ax",%progbits
 434              		.align	2
 435              		.global	PWM_NIR1_WriteControlRegister
 436              		.code	16
 437              		.thumb_func
 438              		.type	PWM_NIR1_WriteControlRegister, %function
 439              	PWM_NIR1_WriteControlRegister:
 440              	.LFB12:
 744:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 745:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 746:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 750:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 754:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [6]   : Reset
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 22


 758:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 761:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 764:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_NIR1.c ****     void PWM_NIR1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 441              		.loc 1 766 0
 442              		.cfi_startproc
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 82B0     		sub	sp, sp, #8
 448              		.cfi_def_cfa_offset 16
 449 0004 00AF     		add	r7, sp, #0
 450              		.cfi_def_cfa_register 7
 451 0006 021C     		mov	r2, r0
 452 0008 FB1D     		add	r3, r7, #7
 453 000a 1A70     		strb	r2, [r3]
 767:.\Generated_Source\PSoC4/PWM_NIR1.c ****         CY_SET_REG8(PWM_NIR1_CONTROL_PTR, control);
 454              		.loc 1 767 0
 455 000c 034B     		ldr	r3, .L35
 456 000e FA1D     		add	r2, r7, #7
 457 0010 1278     		ldrb	r2, [r2]
 458 0012 1A70     		strb	r2, [r3]
 768:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 459              		.loc 1 768 0
 460 0014 BD46     		mov	sp, r7
 461 0016 02B0     		add	sp, sp, #8
 462              		@ sp needed
 463 0018 80BD     		pop	{r7, pc}
 464              	.L36:
 465 001a C046     		.align	2
 466              	.L35:
 467 001c 70000F40 		.word	1074724976
 468              		.cfi_endproc
 469              	.LFE12:
 470              		.size	PWM_NIR1_WriteControlRegister, .-PWM_NIR1_WriteControlRegister
 471              		.section	.text.PWM_NIR1_ReadCapture,"ax",%progbits
 472              		.align	2
 473              		.global	PWM_NIR1_ReadCapture
 474              		.code	16
 475              		.thumb_func
 476              		.type	PWM_NIR1_ReadCapture, %function
 477              	PWM_NIR1_ReadCapture:
 478              	.LFB13:
 769:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 770:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* (PWM_NIR1_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 772:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 773:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (!PWM_NIR1_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 775:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 776:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 23


 777:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 780:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 783:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 786:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 789:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_NIR1.c ****     uint8 PWM_NIR1_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 479              		.loc 1 791 0
 480              		.cfi_startproc
 481 0000 80B5     		push	{r7, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/PWM_NIR1.c ****         return (CY_GET_REG8(PWM_NIR1_CAPTURE_LSB_PTR));
 487              		.loc 1 792 0
 488 0004 024B     		ldr	r3, .L39
 489 0006 1B78     		ldrb	r3, [r3]
 490 0008 DBB2     		uxtb	r3, r3
 793:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 491              		.loc 1 793 0
 492 000a 181C     		mov	r0, r3
 493 000c BD46     		mov	sp, r7
 494              		@ sp needed
 495 000e 80BD     		pop	{r7, pc}
 496              	.L40:
 497              		.align	2
 498              	.L39:
 499 0010 50000F40 		.word	1074724944
 500              		.cfi_endproc
 501              	.LFE13:
 502              		.size	PWM_NIR1_ReadCapture, .-PWM_NIR1_ReadCapture
 503              		.section	.text.PWM_NIR1_ReadCompare1,"ax",%progbits
 504              		.align	2
 505              		.global	PWM_NIR1_ReadCompare1
 506              		.code	16
 507              		.thumb_func
 508              		.type	PWM_NIR1_ReadCompare1, %function
 509              	PWM_NIR1_ReadCompare1:
 510              	.LFB14:
 794:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 795:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* (!PWM_NIR1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 797:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 798:.\Generated_Source\PSoC4/PWM_NIR1.c **** #if (PWM_NIR1_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 800:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 801:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 24


 802:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 805:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 809:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 812:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 815:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_NIR1.c ****     uint8 PWM_NIR1_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 818:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #if(PWM_NIR1_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_NIR1.c ****             return ((uint8)CY_GET_REG16(PWM_NIR1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_NIR1.c ****             return (CY_GET_REG8(PWM_NIR1_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC4/PWM_NIR1.c ****         #endif /* (PWM_NIR1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 824:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 825:.\Generated_Source\PSoC4/PWM_NIR1.c **** #else
 826:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 827:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 828:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 832:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 835:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 838:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 841:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_NIR1.c ****     uint8 PWM_NIR1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 511              		.loc 1 843 0
 512              		.cfi_startproc
 513 0000 80B5     		push	{r7, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 00AF     		add	r7, sp, #0
 518              		.cfi_def_cfa_register 7
 844:.\Generated_Source\PSoC4/PWM_NIR1.c ****         return (CY_GET_REG8(PWM_NIR1_COMPARE1_LSB_PTR));
 519              		.loc 1 844 0
 520 0004 024B     		ldr	r3, .L43
 521 0006 1B78     		ldrb	r3, [r3]
 522 0008 DBB2     		uxtb	r3, r3
 845:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 523              		.loc 1 845 0
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 25


 524 000a 181C     		mov	r0, r3
 525 000c BD46     		mov	sp, r7
 526              		@ sp needed
 527 000e 80BD     		pop	{r7, pc}
 528              	.L44:
 529              		.align	2
 530              	.L43:
 531 0010 20000F40 		.word	1074724896
 532              		.cfi_endproc
 533              	.LFE14:
 534              		.size	PWM_NIR1_ReadCompare1, .-PWM_NIR1_ReadCompare1
 535              		.section	.text.PWM_NIR1_ReadCompare2,"ax",%progbits
 536              		.align	2
 537              		.global	PWM_NIR1_ReadCompare2
 538              		.code	16
 539              		.thumb_func
 540              		.type	PWM_NIR1_ReadCompare2, %function
 541              	PWM_NIR1_ReadCompare2:
 542              	.LFB15:
 846:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 847:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 848:.\Generated_Source\PSoC4/PWM_NIR1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Function Name: PWM_NIR1_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_NIR1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 852:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 855:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 858:.\Generated_Source\PSoC4/PWM_NIR1.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *
 861:.\Generated_Source\PSoC4/PWM_NIR1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_NIR1.c ****     uint8 PWM_NIR1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_NIR1.c ****     {
 543              		.loc 1 863 0
 544              		.cfi_startproc
 545 0000 80B5     		push	{r7, lr}
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 7, -8
 548              		.cfi_offset 14, -4
 549 0002 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 864:.\Generated_Source\PSoC4/PWM_NIR1.c ****         return (CY_GET_REG8(PWM_NIR1_COMPARE2_LSB_PTR));
 551              		.loc 1 864 0
 552 0004 024B     		ldr	r3, .L47
 553 0006 1B78     		ldrb	r3, [r3]
 554 0008 DBB2     		uxtb	r3, r3
 865:.\Generated_Source\PSoC4/PWM_NIR1.c ****     }
 555              		.loc 1 865 0
 556 000a 181C     		mov	r0, r3
 557 000c BD46     		mov	sp, r7
 558              		@ sp needed
 559 000e 80BD     		pop	{r7, pc}
 560              	.L48:
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 26


 561              		.align	2
 562              	.L47:
 563 0010 30000F40 		.word	1074724912
 564              		.cfi_endproc
 565              	.LFE15:
 566              		.size	PWM_NIR1_ReadCompare2, .-PWM_NIR1_ReadCompare2
 567              		.section	.text.PWM_NIR1_ReadPeriod,"ax",%progbits
 568              		.align	2
 569              		.global	PWM_NIR1_ReadPeriod
 570              		.code	16
 571              		.thumb_func
 572              		.type	PWM_NIR1_ReadPeriod, %function
 573              	PWM_NIR1_ReadPeriod:
 574              	.LFB16:
 866:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 867:.\Generated_Source\PSoC4/PWM_NIR1.c **** #endif /* (PWM_NIR1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 869:.\Generated_Source\PSoC4/PWM_NIR1.c **** 
 870:.\Generated_Source\PSoC4/PWM_NIR1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Function Name: PWM_NIR1_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_NIR1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 874:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 877:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 880:.\Generated_Source\PSoC4/PWM_NIR1.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_NIR1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_NIR1.c **** *
 883:.\Generated_Source\PSoC4/PWM_NIR1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_NIR1.c **** uint8 PWM_NIR1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_NIR1.c **** {
 575              		.loc 1 885 0
 576              		.cfi_startproc
 577 0000 80B5     		push	{r7, lr}
 578              		.cfi_def_cfa_offset 8
 579              		.cfi_offset 7, -8
 580              		.cfi_offset 14, -4
 581 0002 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #if(PWM_NIR1_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_NIR1.c ****         return ((uint8)CY_GET_REG16(PWM_NIR1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_NIR1.c ****         return (CY_GET_REG8(PWM_NIR1_PERIOD_LSB_PTR));
 583              		.loc 1 889 0
 584 0004 024B     		ldr	r3, .L51
 585 0006 1B78     		ldrb	r3, [r3]
 586 0008 DBB2     		uxtb	r3, r3
 890:.\Generated_Source\PSoC4/PWM_NIR1.c ****     #endif /* (PWM_NIR1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_NIR1.c **** }
 587              		.loc 1 891 0
 588 000a 181C     		mov	r0, r3
 589 000c BD46     		mov	sp, r7
 590              		@ sp needed
 591 000e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 27


 592              	.L52:
 593              		.align	2
 594              	.L51:
 595 0010 40000F40 		.word	1074724928
 596              		.cfi_endproc
 597              	.LFE16:
 598              		.size	PWM_NIR1_ReadPeriod, .-PWM_NIR1_ReadPeriod
 599              		.text
 600              	.Letext0:
 601              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 602              		.section	.debug_info,"",%progbits
 603              	.Ldebug_info0:
 604 0000 5E020000 		.4byte	0x25e
 605 0004 0400     		.2byte	0x4
 606 0006 00000000 		.4byte	.Ldebug_abbrev0
 607 000a 04       		.byte	0x4
 608 000b 01       		.uleb128 0x1
 609 000c 46000000 		.4byte	.LASF35
 610 0010 01       		.byte	0x1
 611 0011 52010000 		.4byte	.LASF36
 612 0015 14020000 		.4byte	.LASF37
 613 0019 00000000 		.4byte	.Ldebug_ranges0+0
 614 001d 00000000 		.4byte	0
 615 0021 00000000 		.4byte	.Ldebug_line0
 616 0025 02       		.uleb128 0x2
 617 0026 01       		.byte	0x1
 618 0027 06       		.byte	0x6
 619 0028 A0020000 		.4byte	.LASF0
 620 002c 02       		.uleb128 0x2
 621 002d 01       		.byte	0x1
 622 002e 08       		.byte	0x8
 623 002f C2000000 		.4byte	.LASF1
 624 0033 02       		.uleb128 0x2
 625 0034 02       		.byte	0x2
 626 0035 05       		.byte	0x5
 627 0036 61020000 		.4byte	.LASF2
 628 003a 02       		.uleb128 0x2
 629 003b 02       		.byte	0x2
 630 003c 07       		.byte	0x7
 631 003d 2D000000 		.4byte	.LASF3
 632 0041 02       		.uleb128 0x2
 633 0042 04       		.byte	0x4
 634 0043 05       		.byte	0x5
 635 0044 97020000 		.4byte	.LASF4
 636 0048 02       		.uleb128 0x2
 637 0049 04       		.byte	0x4
 638 004a 07       		.byte	0x7
 639 004b D5000000 		.4byte	.LASF5
 640 004f 02       		.uleb128 0x2
 641 0050 08       		.byte	0x8
 642 0051 05       		.byte	0x5
 643 0052 C6010000 		.4byte	.LASF6
 644 0056 02       		.uleb128 0x2
 645 0057 08       		.byte	0x8
 646 0058 07       		.byte	0x7
 647 0059 76010000 		.4byte	.LASF7
 648 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 28


 649 005e 04       		.byte	0x4
 650 005f 05       		.byte	0x5
 651 0060 696E7400 		.ascii	"int\000"
 652 0064 02       		.uleb128 0x2
 653 0065 04       		.byte	0x4
 654 0066 07       		.byte	0x7
 655 0067 37010000 		.4byte	.LASF8
 656 006b 04       		.uleb128 0x4
 657 006c E7000000 		.4byte	.LASF12
 658 0070 02       		.byte	0x2
 659 0071 A1       		.byte	0xa1
 660 0072 2C000000 		.4byte	0x2c
 661 0076 02       		.uleb128 0x2
 662 0077 04       		.byte	0x4
 663 0078 04       		.byte	0x4
 664 0079 40000000 		.4byte	.LASF9
 665 007d 02       		.uleb128 0x2
 666 007e 08       		.byte	0x8
 667 007f 04       		.byte	0x4
 668 0080 30010000 		.4byte	.LASF10
 669 0084 02       		.uleb128 0x2
 670 0085 01       		.byte	0x1
 671 0086 08       		.byte	0x8
 672 0087 E8010000 		.4byte	.LASF11
 673 008b 05       		.uleb128 0x5
 674 008c D0000000 		.4byte	.LASF13
 675 0090 02       		.byte	0x2
 676 0091 4B01     		.2byte	0x14b
 677 0093 97000000 		.4byte	0x97
 678 0097 06       		.uleb128 0x6
 679 0098 6B000000 		.4byte	0x6b
 680 009c 02       		.uleb128 0x2
 681 009d 04       		.byte	0x4
 682 009e 07       		.byte	0x7
 683 009f BD010000 		.4byte	.LASF14
 684 00a3 07       		.uleb128 0x7
 685 00a4 94010000 		.4byte	.LASF15
 686 00a8 01       		.byte	0x1
 687 00a9 37       		.byte	0x37
 688 00aa 00000000 		.4byte	.LFB2
 689 00ae 24000000 		.4byte	.LFE2-.LFB2
 690 00b2 01       		.uleb128 0x1
 691 00b3 9C       		.byte	0x9c
 692 00b4 08       		.uleb128 0x8
 693 00b5 44010000 		.4byte	.LASF18
 694 00b9 01       		.byte	0x1
 695 00ba 54       		.byte	0x54
 696 00bb 00000000 		.4byte	.LFB3
 697 00bf 58000000 		.4byte	.LFE3-.LFB3
 698 00c3 01       		.uleb128 0x1
 699 00c4 9C       		.byte	0x9c
 700 00c5 D8000000 		.4byte	0xd8
 701 00c9 09       		.uleb128 0x9
 702 00ca A3010000 		.4byte	.LASF26
 703 00ce 01       		.byte	0x1
 704 00cf 57       		.byte	0x57
 705 00d0 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 29


 706 00d4 02       		.uleb128 0x2
 707 00d5 91       		.byte	0x91
 708 00d6 77       		.sleb128 -9
 709 00d7 00       		.byte	0
 710 00d8 0A       		.uleb128 0xa
 711 00d9 16000000 		.4byte	.LASF16
 712 00dd 01       		.byte	0x1
 713 00de C7       		.byte	0xc7
 714 00df 00000000 		.4byte	.LFB4
 715 00e3 20000000 		.4byte	.LFE4-.LFB4
 716 00e7 01       		.uleb128 0x1
 717 00e8 9C       		.byte	0x9c
 718 00e9 0A       		.uleb128 0xa
 719 00ea 00000000 		.4byte	.LASF17
 720 00ee 01       		.byte	0x1
 721 00ef E9       		.byte	0xe9
 722 00f0 00000000 		.4byte	.LFB5
 723 00f4 1C000000 		.4byte	.LFE5-.LFB5
 724 00f8 01       		.uleb128 0x1
 725 00f9 9C       		.byte	0x9c
 726 00fa 0B       		.uleb128 0xb
 727 00fb FE010000 		.4byte	.LASF19
 728 00ff 01       		.byte	0x1
 729 0100 9301     		.2byte	0x193
 730 0102 00000000 		.4byte	.LFB6
 731 0106 20000000 		.4byte	.LFE6-.LFB6
 732 010a 01       		.uleb128 0x1
 733 010b 9C       		.byte	0x9c
 734 010c 20010000 		.4byte	0x120
 735 0110 0C       		.uleb128 0xc
 736 0111 28010000 		.4byte	.LASF21
 737 0115 01       		.byte	0x1
 738 0116 9301     		.2byte	0x193
 739 0118 6B000000 		.4byte	0x6b
 740 011c 02       		.uleb128 0x2
 741 011d 91       		.byte	0x91
 742 011e 77       		.sleb128 -9
 743 011f 00       		.byte	0
 744 0120 0D       		.uleb128 0xd
 745 0121 A8010000 		.4byte	.LASF30
 746 0125 01       		.byte	0x1
 747 0126 A901     		.2byte	0x1a9
 748 0128 6B000000 		.4byte	0x6b
 749 012c 00000000 		.4byte	.LFB7
 750 0130 1C000000 		.4byte	.LFE7-.LFB7
 751 0134 01       		.uleb128 0x1
 752 0135 9C       		.byte	0x9c
 753 0136 0B       		.uleb128 0xb
 754 0137 F7020000 		.4byte	.LASF20
 755 013b 01       		.byte	0x1
 756 013c E201     		.2byte	0x1e2
 757 013e 00000000 		.4byte	.LFB8
 758 0142 20000000 		.4byte	.LFE8-.LFB8
 759 0146 01       		.uleb128 0x1
 760 0147 9C       		.byte	0x9c
 761 0148 5C010000 		.4byte	0x15c
 762 014c 0C       		.uleb128 0xc
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 30


 763 014d 26000000 		.4byte	.LASF22
 764 0151 01       		.byte	0x1
 765 0152 E201     		.2byte	0x1e2
 766 0154 6B000000 		.4byte	0x6b
 767 0158 02       		.uleb128 0x2
 768 0159 91       		.byte	0x91
 769 015a 77       		.sleb128 -9
 770 015b 00       		.byte	0
 771 015c 0B       		.uleb128 0xb
 772 015d AC020000 		.4byte	.LASF23
 773 0161 01       		.byte	0x1
 774 0162 2B02     		.2byte	0x22b
 775 0164 00000000 		.4byte	.LFB9
 776 0168 20000000 		.4byte	.LFE9-.LFB9
 777 016c 01       		.uleb128 0x1
 778 016d 9C       		.byte	0x9c
 779 016e 82010000 		.4byte	0x182
 780 0172 0C       		.uleb128 0xc
 781 0173 0E000000 		.4byte	.LASF24
 782 0177 01       		.byte	0x1
 783 0178 2B02     		.2byte	0x22b
 784 017a 6B000000 		.4byte	0x6b
 785 017e 02       		.uleb128 0x2
 786 017f 91       		.byte	0x91
 787 0180 77       		.sleb128 -9
 788 0181 00       		.byte	0
 789 0182 0B       		.uleb128 0xb
 790 0183 C3020000 		.4byte	.LASF25
 791 0187 01       		.byte	0x1
 792 0188 4802     		.2byte	0x248
 793 018a 00000000 		.4byte	.LFB10
 794 018e 20000000 		.4byte	.LFE10-.LFB10
 795 0192 01       		.uleb128 0x1
 796 0193 9C       		.byte	0x9c
 797 0194 A8010000 		.4byte	0x1a8
 798 0198 0C       		.uleb128 0xc
 799 0199 0E000000 		.4byte	.LASF24
 800 019d 01       		.byte	0x1
 801 019e 4802     		.2byte	0x248
 802 01a0 6B000000 		.4byte	0x6b
 803 01a4 02       		.uleb128 0x2
 804 01a5 91       		.byte	0x91
 805 01a6 77       		.sleb128 -9
 806 01a7 00       		.byte	0
 807 01a8 0E       		.uleb128 0xe
 808 01a9 DA020000 		.4byte	.LASF38
 809 01ad 01       		.byte	0x1
 810 01ae E102     		.2byte	0x2e1
 811 01b0 6B000000 		.4byte	0x6b
 812 01b4 00000000 		.4byte	.LFB11
 813 01b8 20000000 		.4byte	.LFE11-.LFB11
 814 01bc 01       		.uleb128 0x1
 815 01bd 9C       		.byte	0x9c
 816 01be D2010000 		.4byte	0x1d2
 817 01c2 0F       		.uleb128 0xf
 818 01c3 8D010000 		.4byte	.LASF27
 819 01c7 01       		.byte	0x1
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 31


 820 01c8 E302     		.2byte	0x2e3
 821 01ca 6B000000 		.4byte	0x6b
 822 01ce 02       		.uleb128 0x2
 823 01cf 91       		.byte	0x91
 824 01d0 77       		.sleb128 -9
 825 01d1 00       		.byte	0
 826 01d2 0B       		.uleb128 0xb
 827 01d3 0A010000 		.4byte	.LASF28
 828 01d7 01       		.byte	0x1
 829 01d8 FD02     		.2byte	0x2fd
 830 01da 00000000 		.4byte	.LFB12
 831 01de 20000000 		.4byte	.LFE12-.LFB12
 832 01e2 01       		.uleb128 0x1
 833 01e3 9C       		.byte	0x9c
 834 01e4 F8010000 		.4byte	0x1f8
 835 01e8 0C       		.uleb128 0xc
 836 01e9 ED000000 		.4byte	.LASF29
 837 01ed 01       		.byte	0x1
 838 01ee FD02     		.2byte	0x2fd
 839 01f0 6B000000 		.4byte	0x6b
 840 01f4 02       		.uleb128 0x2
 841 01f5 91       		.byte	0x91
 842 01f6 77       		.sleb128 -9
 843 01f7 00       		.byte	0
 844 01f8 0D       		.uleb128 0xd
 845 01f9 F5000000 		.4byte	.LASF31
 846 01fd 01       		.byte	0x1
 847 01fe 1603     		.2byte	0x316
 848 0200 6B000000 		.4byte	0x6b
 849 0204 00000000 		.4byte	.LFB13
 850 0208 14000000 		.4byte	.LFE13-.LFB13
 851 020c 01       		.uleb128 0x1
 852 020d 9C       		.byte	0x9c
 853 020e 0D       		.uleb128 0xd
 854 020f 6B020000 		.4byte	.LASF32
 855 0213 01       		.byte	0x1
 856 0214 4A03     		.2byte	0x34a
 857 0216 6B000000 		.4byte	0x6b
 858 021a 00000000 		.4byte	.LFB14
 859 021e 14000000 		.4byte	.LFE14-.LFB14
 860 0222 01       		.uleb128 0x1
 861 0223 9C       		.byte	0x9c
 862 0224 0D       		.uleb128 0xd
 863 0225 81020000 		.4byte	.LASF33
 864 0229 01       		.byte	0x1
 865 022a 5E03     		.2byte	0x35e
 866 022c 6B000000 		.4byte	0x6b
 867 0230 00000000 		.4byte	.LFB15
 868 0234 14000000 		.4byte	.LFE15-.LFB15
 869 0238 01       		.uleb128 0x1
 870 0239 9C       		.byte	0x9c
 871 023a 0D       		.uleb128 0xd
 872 023b D4010000 		.4byte	.LASF34
 873 023f 01       		.byte	0x1
 874 0240 7403     		.2byte	0x374
 875 0242 6B000000 		.4byte	0x6b
 876 0246 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 32


 877 024a 14000000 		.4byte	.LFE16-.LFB16
 878 024e 01       		.uleb128 0x1
 879 024f 9C       		.byte	0x9c
 880 0250 10       		.uleb128 0x10
 881 0251 ED010000 		.4byte	.LASF39
 882 0255 01       		.byte	0x1
 883 0256 20       		.byte	0x20
 884 0257 6B000000 		.4byte	0x6b
 885 025b 05       		.uleb128 0x5
 886 025c 03       		.byte	0x3
 887 025d 00000000 		.4byte	PWM_NIR1_initVar
 888 0261 00       		.byte	0
 889              		.section	.debug_abbrev,"",%progbits
 890              	.Ldebug_abbrev0:
 891 0000 01       		.uleb128 0x1
 892 0001 11       		.uleb128 0x11
 893 0002 01       		.byte	0x1
 894 0003 25       		.uleb128 0x25
 895 0004 0E       		.uleb128 0xe
 896 0005 13       		.uleb128 0x13
 897 0006 0B       		.uleb128 0xb
 898 0007 03       		.uleb128 0x3
 899 0008 0E       		.uleb128 0xe
 900 0009 1B       		.uleb128 0x1b
 901 000a 0E       		.uleb128 0xe
 902 000b 55       		.uleb128 0x55
 903 000c 17       		.uleb128 0x17
 904 000d 11       		.uleb128 0x11
 905 000e 01       		.uleb128 0x1
 906 000f 10       		.uleb128 0x10
 907 0010 17       		.uleb128 0x17
 908 0011 00       		.byte	0
 909 0012 00       		.byte	0
 910 0013 02       		.uleb128 0x2
 911 0014 24       		.uleb128 0x24
 912 0015 00       		.byte	0
 913 0016 0B       		.uleb128 0xb
 914 0017 0B       		.uleb128 0xb
 915 0018 3E       		.uleb128 0x3e
 916 0019 0B       		.uleb128 0xb
 917 001a 03       		.uleb128 0x3
 918 001b 0E       		.uleb128 0xe
 919 001c 00       		.byte	0
 920 001d 00       		.byte	0
 921 001e 03       		.uleb128 0x3
 922 001f 24       		.uleb128 0x24
 923 0020 00       		.byte	0
 924 0021 0B       		.uleb128 0xb
 925 0022 0B       		.uleb128 0xb
 926 0023 3E       		.uleb128 0x3e
 927 0024 0B       		.uleb128 0xb
 928 0025 03       		.uleb128 0x3
 929 0026 08       		.uleb128 0x8
 930 0027 00       		.byte	0
 931 0028 00       		.byte	0
 932 0029 04       		.uleb128 0x4
 933 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 33


 934 002b 00       		.byte	0
 935 002c 03       		.uleb128 0x3
 936 002d 0E       		.uleb128 0xe
 937 002e 3A       		.uleb128 0x3a
 938 002f 0B       		.uleb128 0xb
 939 0030 3B       		.uleb128 0x3b
 940 0031 0B       		.uleb128 0xb
 941 0032 49       		.uleb128 0x49
 942 0033 13       		.uleb128 0x13
 943 0034 00       		.byte	0
 944 0035 00       		.byte	0
 945 0036 05       		.uleb128 0x5
 946 0037 16       		.uleb128 0x16
 947 0038 00       		.byte	0
 948 0039 03       		.uleb128 0x3
 949 003a 0E       		.uleb128 0xe
 950 003b 3A       		.uleb128 0x3a
 951 003c 0B       		.uleb128 0xb
 952 003d 3B       		.uleb128 0x3b
 953 003e 05       		.uleb128 0x5
 954 003f 49       		.uleb128 0x49
 955 0040 13       		.uleb128 0x13
 956 0041 00       		.byte	0
 957 0042 00       		.byte	0
 958 0043 06       		.uleb128 0x6
 959 0044 35       		.uleb128 0x35
 960 0045 00       		.byte	0
 961 0046 49       		.uleb128 0x49
 962 0047 13       		.uleb128 0x13
 963 0048 00       		.byte	0
 964 0049 00       		.byte	0
 965 004a 07       		.uleb128 0x7
 966 004b 2E       		.uleb128 0x2e
 967 004c 00       		.byte	0
 968 004d 3F       		.uleb128 0x3f
 969 004e 19       		.uleb128 0x19
 970 004f 03       		.uleb128 0x3
 971 0050 0E       		.uleb128 0xe
 972 0051 3A       		.uleb128 0x3a
 973 0052 0B       		.uleb128 0xb
 974 0053 3B       		.uleb128 0x3b
 975 0054 0B       		.uleb128 0xb
 976 0055 27       		.uleb128 0x27
 977 0056 19       		.uleb128 0x19
 978 0057 11       		.uleb128 0x11
 979 0058 01       		.uleb128 0x1
 980 0059 12       		.uleb128 0x12
 981 005a 06       		.uleb128 0x6
 982 005b 40       		.uleb128 0x40
 983 005c 18       		.uleb128 0x18
 984 005d 9642     		.uleb128 0x2116
 985 005f 19       		.uleb128 0x19
 986 0060 00       		.byte	0
 987 0061 00       		.byte	0
 988 0062 08       		.uleb128 0x8
 989 0063 2E       		.uleb128 0x2e
 990 0064 01       		.byte	0x1
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 34


 991 0065 3F       		.uleb128 0x3f
 992 0066 19       		.uleb128 0x19
 993 0067 03       		.uleb128 0x3
 994 0068 0E       		.uleb128 0xe
 995 0069 3A       		.uleb128 0x3a
 996 006a 0B       		.uleb128 0xb
 997 006b 3B       		.uleb128 0x3b
 998 006c 0B       		.uleb128 0xb
 999 006d 27       		.uleb128 0x27
 1000 006e 19       		.uleb128 0x19
 1001 006f 11       		.uleb128 0x11
 1002 0070 01       		.uleb128 0x1
 1003 0071 12       		.uleb128 0x12
 1004 0072 06       		.uleb128 0x6
 1005 0073 40       		.uleb128 0x40
 1006 0074 18       		.uleb128 0x18
 1007 0075 9642     		.uleb128 0x2116
 1008 0077 19       		.uleb128 0x19
 1009 0078 01       		.uleb128 0x1
 1010 0079 13       		.uleb128 0x13
 1011 007a 00       		.byte	0
 1012 007b 00       		.byte	0
 1013 007c 09       		.uleb128 0x9
 1014 007d 34       		.uleb128 0x34
 1015 007e 00       		.byte	0
 1016 007f 03       		.uleb128 0x3
 1017 0080 0E       		.uleb128 0xe
 1018 0081 3A       		.uleb128 0x3a
 1019 0082 0B       		.uleb128 0xb
 1020 0083 3B       		.uleb128 0x3b
 1021 0084 0B       		.uleb128 0xb
 1022 0085 49       		.uleb128 0x49
 1023 0086 13       		.uleb128 0x13
 1024 0087 02       		.uleb128 0x2
 1025 0088 18       		.uleb128 0x18
 1026 0089 00       		.byte	0
 1027 008a 00       		.byte	0
 1028 008b 0A       		.uleb128 0xa
 1029 008c 2E       		.uleb128 0x2e
 1030 008d 00       		.byte	0
 1031 008e 3F       		.uleb128 0x3f
 1032 008f 19       		.uleb128 0x19
 1033 0090 03       		.uleb128 0x3
 1034 0091 0E       		.uleb128 0xe
 1035 0092 3A       		.uleb128 0x3a
 1036 0093 0B       		.uleb128 0xb
 1037 0094 3B       		.uleb128 0x3b
 1038 0095 0B       		.uleb128 0xb
 1039 0096 27       		.uleb128 0x27
 1040 0097 19       		.uleb128 0x19
 1041 0098 11       		.uleb128 0x11
 1042 0099 01       		.uleb128 0x1
 1043 009a 12       		.uleb128 0x12
 1044 009b 06       		.uleb128 0x6
 1045 009c 40       		.uleb128 0x40
 1046 009d 18       		.uleb128 0x18
 1047 009e 9742     		.uleb128 0x2117
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 35


 1048 00a0 19       		.uleb128 0x19
 1049 00a1 00       		.byte	0
 1050 00a2 00       		.byte	0
 1051 00a3 0B       		.uleb128 0xb
 1052 00a4 2E       		.uleb128 0x2e
 1053 00a5 01       		.byte	0x1
 1054 00a6 3F       		.uleb128 0x3f
 1055 00a7 19       		.uleb128 0x19
 1056 00a8 03       		.uleb128 0x3
 1057 00a9 0E       		.uleb128 0xe
 1058 00aa 3A       		.uleb128 0x3a
 1059 00ab 0B       		.uleb128 0xb
 1060 00ac 3B       		.uleb128 0x3b
 1061 00ad 05       		.uleb128 0x5
 1062 00ae 27       		.uleb128 0x27
 1063 00af 19       		.uleb128 0x19
 1064 00b0 11       		.uleb128 0x11
 1065 00b1 01       		.uleb128 0x1
 1066 00b2 12       		.uleb128 0x12
 1067 00b3 06       		.uleb128 0x6
 1068 00b4 40       		.uleb128 0x40
 1069 00b5 18       		.uleb128 0x18
 1070 00b6 9742     		.uleb128 0x2117
 1071 00b8 19       		.uleb128 0x19
 1072 00b9 01       		.uleb128 0x1
 1073 00ba 13       		.uleb128 0x13
 1074 00bb 00       		.byte	0
 1075 00bc 00       		.byte	0
 1076 00bd 0C       		.uleb128 0xc
 1077 00be 05       		.uleb128 0x5
 1078 00bf 00       		.byte	0
 1079 00c0 03       		.uleb128 0x3
 1080 00c1 0E       		.uleb128 0xe
 1081 00c2 3A       		.uleb128 0x3a
 1082 00c3 0B       		.uleb128 0xb
 1083 00c4 3B       		.uleb128 0x3b
 1084 00c5 05       		.uleb128 0x5
 1085 00c6 49       		.uleb128 0x49
 1086 00c7 13       		.uleb128 0x13
 1087 00c8 02       		.uleb128 0x2
 1088 00c9 18       		.uleb128 0x18
 1089 00ca 00       		.byte	0
 1090 00cb 00       		.byte	0
 1091 00cc 0D       		.uleb128 0xd
 1092 00cd 2E       		.uleb128 0x2e
 1093 00ce 00       		.byte	0
 1094 00cf 3F       		.uleb128 0x3f
 1095 00d0 19       		.uleb128 0x19
 1096 00d1 03       		.uleb128 0x3
 1097 00d2 0E       		.uleb128 0xe
 1098 00d3 3A       		.uleb128 0x3a
 1099 00d4 0B       		.uleb128 0xb
 1100 00d5 3B       		.uleb128 0x3b
 1101 00d6 05       		.uleb128 0x5
 1102 00d7 27       		.uleb128 0x27
 1103 00d8 19       		.uleb128 0x19
 1104 00d9 49       		.uleb128 0x49
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 36


 1105 00da 13       		.uleb128 0x13
 1106 00db 11       		.uleb128 0x11
 1107 00dc 01       		.uleb128 0x1
 1108 00dd 12       		.uleb128 0x12
 1109 00de 06       		.uleb128 0x6
 1110 00df 40       		.uleb128 0x40
 1111 00e0 18       		.uleb128 0x18
 1112 00e1 9742     		.uleb128 0x2117
 1113 00e3 19       		.uleb128 0x19
 1114 00e4 00       		.byte	0
 1115 00e5 00       		.byte	0
 1116 00e6 0E       		.uleb128 0xe
 1117 00e7 2E       		.uleb128 0x2e
 1118 00e8 01       		.byte	0x1
 1119 00e9 3F       		.uleb128 0x3f
 1120 00ea 19       		.uleb128 0x19
 1121 00eb 03       		.uleb128 0x3
 1122 00ec 0E       		.uleb128 0xe
 1123 00ed 3A       		.uleb128 0x3a
 1124 00ee 0B       		.uleb128 0xb
 1125 00ef 3B       		.uleb128 0x3b
 1126 00f0 05       		.uleb128 0x5
 1127 00f1 27       		.uleb128 0x27
 1128 00f2 19       		.uleb128 0x19
 1129 00f3 49       		.uleb128 0x49
 1130 00f4 13       		.uleb128 0x13
 1131 00f5 11       		.uleb128 0x11
 1132 00f6 01       		.uleb128 0x1
 1133 00f7 12       		.uleb128 0x12
 1134 00f8 06       		.uleb128 0x6
 1135 00f9 40       		.uleb128 0x40
 1136 00fa 18       		.uleb128 0x18
 1137 00fb 9742     		.uleb128 0x2117
 1138 00fd 19       		.uleb128 0x19
 1139 00fe 01       		.uleb128 0x1
 1140 00ff 13       		.uleb128 0x13
 1141 0100 00       		.byte	0
 1142 0101 00       		.byte	0
 1143 0102 0F       		.uleb128 0xf
 1144 0103 34       		.uleb128 0x34
 1145 0104 00       		.byte	0
 1146 0105 03       		.uleb128 0x3
 1147 0106 0E       		.uleb128 0xe
 1148 0107 3A       		.uleb128 0x3a
 1149 0108 0B       		.uleb128 0xb
 1150 0109 3B       		.uleb128 0x3b
 1151 010a 05       		.uleb128 0x5
 1152 010b 49       		.uleb128 0x49
 1153 010c 13       		.uleb128 0x13
 1154 010d 02       		.uleb128 0x2
 1155 010e 18       		.uleb128 0x18
 1156 010f 00       		.byte	0
 1157 0110 00       		.byte	0
 1158 0111 10       		.uleb128 0x10
 1159 0112 34       		.uleb128 0x34
 1160 0113 00       		.byte	0
 1161 0114 03       		.uleb128 0x3
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 37


 1162 0115 0E       		.uleb128 0xe
 1163 0116 3A       		.uleb128 0x3a
 1164 0117 0B       		.uleb128 0xb
 1165 0118 3B       		.uleb128 0x3b
 1166 0119 0B       		.uleb128 0xb
 1167 011a 49       		.uleb128 0x49
 1168 011b 13       		.uleb128 0x13
 1169 011c 3F       		.uleb128 0x3f
 1170 011d 19       		.uleb128 0x19
 1171 011e 02       		.uleb128 0x2
 1172 011f 18       		.uleb128 0x18
 1173 0120 00       		.byte	0
 1174 0121 00       		.byte	0
 1175 0122 00       		.byte	0
 1176              		.section	.debug_aranges,"",%progbits
 1177 0000 8C000000 		.4byte	0x8c
 1178 0004 0200     		.2byte	0x2
 1179 0006 00000000 		.4byte	.Ldebug_info0
 1180 000a 04       		.byte	0x4
 1181 000b 00       		.byte	0
 1182 000c 0000     		.2byte	0
 1183 000e 0000     		.2byte	0
 1184 0010 00000000 		.4byte	.LFB2
 1185 0014 24000000 		.4byte	.LFE2-.LFB2
 1186 0018 00000000 		.4byte	.LFB3
 1187 001c 58000000 		.4byte	.LFE3-.LFB3
 1188 0020 00000000 		.4byte	.LFB4
 1189 0024 20000000 		.4byte	.LFE4-.LFB4
 1190 0028 00000000 		.4byte	.LFB5
 1191 002c 1C000000 		.4byte	.LFE5-.LFB5
 1192 0030 00000000 		.4byte	.LFB6
 1193 0034 20000000 		.4byte	.LFE6-.LFB6
 1194 0038 00000000 		.4byte	.LFB7
 1195 003c 1C000000 		.4byte	.LFE7-.LFB7
 1196 0040 00000000 		.4byte	.LFB8
 1197 0044 20000000 		.4byte	.LFE8-.LFB8
 1198 0048 00000000 		.4byte	.LFB9
 1199 004c 20000000 		.4byte	.LFE9-.LFB9
 1200 0050 00000000 		.4byte	.LFB10
 1201 0054 20000000 		.4byte	.LFE10-.LFB10
 1202 0058 00000000 		.4byte	.LFB11
 1203 005c 20000000 		.4byte	.LFE11-.LFB11
 1204 0060 00000000 		.4byte	.LFB12
 1205 0064 20000000 		.4byte	.LFE12-.LFB12
 1206 0068 00000000 		.4byte	.LFB13
 1207 006c 14000000 		.4byte	.LFE13-.LFB13
 1208 0070 00000000 		.4byte	.LFB14
 1209 0074 14000000 		.4byte	.LFE14-.LFB14
 1210 0078 00000000 		.4byte	.LFB15
 1211 007c 14000000 		.4byte	.LFE15-.LFB15
 1212 0080 00000000 		.4byte	.LFB16
 1213 0084 14000000 		.4byte	.LFE16-.LFB16
 1214 0088 00000000 		.4byte	0
 1215 008c 00000000 		.4byte	0
 1216              		.section	.debug_ranges,"",%progbits
 1217              	.Ldebug_ranges0:
 1218 0000 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 38


 1219 0004 24000000 		.4byte	.LFE2
 1220 0008 00000000 		.4byte	.LFB3
 1221 000c 58000000 		.4byte	.LFE3
 1222 0010 00000000 		.4byte	.LFB4
 1223 0014 20000000 		.4byte	.LFE4
 1224 0018 00000000 		.4byte	.LFB5
 1225 001c 1C000000 		.4byte	.LFE5
 1226 0020 00000000 		.4byte	.LFB6
 1227 0024 20000000 		.4byte	.LFE6
 1228 0028 00000000 		.4byte	.LFB7
 1229 002c 1C000000 		.4byte	.LFE7
 1230 0030 00000000 		.4byte	.LFB8
 1231 0034 20000000 		.4byte	.LFE8
 1232 0038 00000000 		.4byte	.LFB9
 1233 003c 20000000 		.4byte	.LFE9
 1234 0040 00000000 		.4byte	.LFB10
 1235 0044 20000000 		.4byte	.LFE10
 1236 0048 00000000 		.4byte	.LFB11
 1237 004c 20000000 		.4byte	.LFE11
 1238 0050 00000000 		.4byte	.LFB12
 1239 0054 20000000 		.4byte	.LFE12
 1240 0058 00000000 		.4byte	.LFB13
 1241 005c 14000000 		.4byte	.LFE13
 1242 0060 00000000 		.4byte	.LFB14
 1243 0064 14000000 		.4byte	.LFE14
 1244 0068 00000000 		.4byte	.LFB15
 1245 006c 14000000 		.4byte	.LFE15
 1246 0070 00000000 		.4byte	.LFB16
 1247 0074 14000000 		.4byte	.LFE16
 1248 0078 00000000 		.4byte	0
 1249 007c 00000000 		.4byte	0
 1250              		.section	.debug_line,"",%progbits
 1251              	.Ldebug_line0:
 1252 0000 6B010000 		.section	.debug_str,"MS",%progbits,1
 1252      02004700 
 1252      00000201 
 1252      FB0E0D00 
 1252      01010101 
 1253              	.LASF17:
 1254 0000 50574D5F 		.ascii	"PWM_NIR1_Stop\000"
 1254      4E495231 
 1254      5F53746F 
 1254      7000
 1255              	.LASF24:
 1256 000e 636F6D70 		.ascii	"compare\000"
 1256      61726500 
 1257              	.LASF16:
 1258 0016 50574D5F 		.ascii	"PWM_NIR1_Enable\000"
 1258      4E495231 
 1258      5F456E61 
 1258      626C6500 
 1259              	.LASF22:
 1260 0026 70657269 		.ascii	"period\000"
 1260      6F6400
 1261              	.LASF3:
 1262 002d 73686F72 		.ascii	"short unsigned int\000"
 1262      7420756E 
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 39


 1262      7369676E 
 1262      65642069 
 1262      6E7400
 1263              	.LASF9:
 1264 0040 666C6F61 		.ascii	"float\000"
 1264      7400
 1265              	.LASF35:
 1266 0046 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1266      4320342E 
 1266      382E3420 
 1266      32303134 
 1266      30353236 
 1267 0079 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 1267      20726576 
 1267      6973696F 
 1267      6E203231 
 1267      31333538 
 1268 00ac 30202D66 		.ascii	"0 -ffunction-sections\000"
 1268      66756E63 
 1268      74696F6E 
 1268      2D736563 
 1268      74696F6E 
 1269              	.LASF1:
 1270 00c2 756E7369 		.ascii	"unsigned char\000"
 1270      676E6564 
 1270      20636861 
 1270      7200
 1271              	.LASF13:
 1272 00d0 72656738 		.ascii	"reg8\000"
 1272      00
 1273              	.LASF5:
 1274 00d5 6C6F6E67 		.ascii	"long unsigned int\000"
 1274      20756E73 
 1274      69676E65 
 1274      6420696E 
 1274      7400
 1275              	.LASF12:
 1276 00e7 75696E74 		.ascii	"uint8\000"
 1276      3800
 1277              	.LASF29:
 1278 00ed 636F6E74 		.ascii	"control\000"
 1278      726F6C00 
 1279              	.LASF31:
 1280 00f5 50574D5F 		.ascii	"PWM_NIR1_ReadCapture\000"
 1280      4E495231 
 1280      5F526561 
 1280      64436170 
 1280      74757265 
 1281              	.LASF28:
 1282 010a 50574D5F 		.ascii	"PWM_NIR1_WriteControlRegister\000"
 1282      4E495231 
 1282      5F577269 
 1282      7465436F 
 1282      6E74726F 
 1283              	.LASF21:
 1284 0128 636F756E 		.ascii	"counter\000"
 1284      74657200 
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 40


 1285              	.LASF10:
 1286 0130 646F7562 		.ascii	"double\000"
 1286      6C6500
 1287              	.LASF8:
 1288 0137 756E7369 		.ascii	"unsigned int\000"
 1288      676E6564 
 1288      20696E74 
 1288      00
 1289              	.LASF18:
 1290 0144 50574D5F 		.ascii	"PWM_NIR1_Init\000"
 1290      4E495231 
 1290      5F496E69 
 1290      7400
 1291              	.LASF36:
 1292 0152 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_NIR1.c\000"
 1292      6E657261 
 1292      7465645F 
 1292      536F7572 
 1292      63655C50 
 1293              	.LASF7:
 1294 0176 6C6F6E67 		.ascii	"long long unsigned int\000"
 1294      206C6F6E 
 1294      6720756E 
 1294      7369676E 
 1294      65642069 
 1295              	.LASF27:
 1296 018d 72657375 		.ascii	"result\000"
 1296      6C7400
 1297              	.LASF15:
 1298 0194 50574D5F 		.ascii	"PWM_NIR1_Start\000"
 1298      4E495231 
 1298      5F537461 
 1298      727400
 1299              	.LASF26:
 1300 01a3 6374726C 		.ascii	"ctrl\000"
 1300      00
 1301              	.LASF30:
 1302 01a8 50574D5F 		.ascii	"PWM_NIR1_ReadCounter\000"
 1302      4E495231 
 1302      5F526561 
 1302      64436F75 
 1302      6E746572 
 1303              	.LASF14:
 1304 01bd 73697A65 		.ascii	"sizetype\000"
 1304      74797065 
 1304      00
 1305              	.LASF6:
 1306 01c6 6C6F6E67 		.ascii	"long long int\000"
 1306      206C6F6E 
 1306      6720696E 
 1306      7400
 1307              	.LASF34:
 1308 01d4 50574D5F 		.ascii	"PWM_NIR1_ReadPeriod\000"
 1308      4E495231 
 1308      5F526561 
 1308      64506572 
 1308      696F6400 
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 41


 1309              	.LASF11:
 1310 01e8 63686172 		.ascii	"char\000"
 1310      00
 1311              	.LASF39:
 1312 01ed 50574D5F 		.ascii	"PWM_NIR1_initVar\000"
 1312      4E495231 
 1312      5F696E69 
 1312      74566172 
 1312      00
 1313              	.LASF19:
 1314 01fe 50574D5F 		.ascii	"PWM_NIR1_WriteCounter\000"
 1314      4E495231 
 1314      5F577269 
 1314      7465436F 
 1314      756E7465 
 1315              	.LASF37:
 1316 0214 433A5C55 		.ascii	"C:\\Users\\wzh\\Desktop\\Gucose_monitor\\Gucose_mon"
 1316      73657273 
 1316      5C777A68 
 1316      5C446573 
 1316      6B746F70 
 1317 0242 69746F72 		.ascii	"itor\\BLE_Battery_Level01.cydsn\000"
 1317      5C424C45 
 1317      5F426174 
 1317      74657279 
 1317      5F4C6576 
 1318              	.LASF2:
 1319 0261 73686F72 		.ascii	"short int\000"
 1319      7420696E 
 1319      7400
 1320              	.LASF32:
 1321 026b 50574D5F 		.ascii	"PWM_NIR1_ReadCompare1\000"
 1321      4E495231 
 1321      5F526561 
 1321      64436F6D 
 1321      70617265 
 1322              	.LASF33:
 1323 0281 50574D5F 		.ascii	"PWM_NIR1_ReadCompare2\000"
 1323      4E495231 
 1323      5F526561 
 1323      64436F6D 
 1323      70617265 
 1324              	.LASF4:
 1325 0297 6C6F6E67 		.ascii	"long int\000"
 1325      20696E74 
 1325      00
 1326              	.LASF0:
 1327 02a0 7369676E 		.ascii	"signed char\000"
 1327      65642063 
 1327      68617200 
 1328              	.LASF23:
 1329 02ac 50574D5F 		.ascii	"PWM_NIR1_WriteCompare1\000"
 1329      4E495231 
 1329      5F577269 
 1329      7465436F 
 1329      6D706172 
 1330              	.LASF25:
ARM GAS  C:\Users\wzh\AppData\Local\Temp\ccWedzv9.s 			page 42


 1331 02c3 50574D5F 		.ascii	"PWM_NIR1_WriteCompare2\000"
 1331      4E495231 
 1331      5F577269 
 1331      7465436F 
 1331      6D706172 
 1332              	.LASF38:
 1333 02da 50574D5F 		.ascii	"PWM_NIR1_ReadControlRegister\000"
 1333      4E495231 
 1333      5F526561 
 1333      64436F6E 
 1333      74726F6C 
 1334              	.LASF20:
 1335 02f7 50574D5F 		.ascii	"PWM_NIR1_WritePeriod\000"
 1335      4E495231 
 1335      5F577269 
 1335      74655065 
 1335      72696F64 
 1336              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
